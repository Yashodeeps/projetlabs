// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  username  String    @unique
  verifyCode String
  verifyCodeExpiry DateTime 
  isVerified Boolean @default(false)   
  projects  Project[] // Relation to Project model
  todos     Todo[]    // Relation to Todo model
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  tasks       Task[]    // Relation to Task model
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id])
  status      TaskStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Todo {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  status      TodoStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TodoStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}
